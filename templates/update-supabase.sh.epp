#!/bin/bash

# Supabase Update Script
# Updates Supabase to the latest version by pulling new Docker images

set -euo pipefail

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}âœ“${NC} $1"
}

warning() {
    echo -e "${YELLOW}âš ${NC} $1"
}

error() {
    echo -e "${RED}âœ—${NC} $1"
}

DOCKER_DIR="<%= $docker_dir %>"
INSTALL_DIR="<%= $install_directory %>"

echo "========================================"
echo -e "${BLUE}ðŸ”„ Supabase Update Script${NC}"
echo "========================================"
echo ""

# Check if running as supabase user
if [ "$(whoami)" != "supabase" ]; then
    error "This script must be run as the supabase user"
    echo "Run: sudo -u supabase $0"
    exit 1
fi

log "Updating Supabase to latest version..."

# Stop services
log "Stopping Supabase services..."
if systemctl is-active --quiet supabase; then
    systemctl stop supabase
    success "Services stopped"
else
    warning "Services were not running"
fi

# Change to docker directory
cd "$DOCKER_DIR"

# Pull latest images
log "Pulling latest Docker images..."
if docker-compose pull; then
    success "Images updated"
else
    error "Failed to pull images"
    exit 1
fi

# Remove old containers (but keep volumes/data)
log "Removing old containers..."
if docker-compose down; then
    success "Old containers removed"
else
    warning "No containers to remove"
fi

# Start services with new images
log "Starting services with updated images..."
if systemctl start supabase; then
    success "Services started"
else
    error "Failed to start services"
    exit 1
fi

# Wait for services to be ready
log "Waiting for services to be ready..."
sleep 30

# Health check
log "Performing health check..."
if "${INSTALL_DIR}/health-check.sh" --quiet; then
    success "Health check passed"
    echo ""
    echo "ðŸŽ‰ Supabase successfully updated!"
    echo ""
    echo "ðŸ“Š Access your updated Supabase:"
    echo "  â€¢ Studio: http://$(hostname -I | awk '{print $1}'):8000"
    echo "  â€¢ Check status: systemctl status supabase"
    echo "  â€¢ View logs: journalctl -u supabase -f"
else
    error "Health check failed"
    echo ""
    echo "ðŸ’¡ Troubleshooting:"
    echo "  â€¢ Check logs: journalctl -u supabase -f"
    echo "  â€¢ Check Docker: docker-compose logs"
    echo "  â€¢ Restart services: systemctl restart supabase"
    exit 1
fi

echo ""
success "Update completed successfully!" 