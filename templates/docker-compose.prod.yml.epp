# Production Docker Compose Override
# This file extends the default docker-compose.yml with production-specific settings

version: '3.8'

services:
  kong:
    ports:
      - "8000:8000"
      - "8443:8443"
    restart: unless-stopped
    environment:
      KONG_LOG_LEVEL: info
      KONG_NGINX_HTTP_ACCESS_LOG: 'off'
      KONG_NGINX_HTTP_ERROR_LOG: 'off'
      KONG_NGINX_STREAM_ACCESS_LOG: 'off'
      KONG_NGINX_STREAM_ERROR_LOG: 'off'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  auth:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  rest:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  realtime:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  storage:
    restart: unless-stopped
    volumes:
      - <%= $install_directory %>/volumes/storage:/var/lib/storage:Z
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  studio:
    restart: unless-stopped
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  meta:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    restart: unless-stopped
    volumes:
      - <%= $install_directory %>/volumes/db/data:/var/lib/postgresql/data:Z
      - <%= $install_directory %>/volumes/db/init:/docker-entrypoint-initdb.d/:Z
    command:
      - postgres
      - -c
      - config_file=/etc/postgresql/postgresql.conf
      - -c
      - log_min_messages=fatal
    environment:
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  supavisor:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  functions:
    restart: unless-stopped
    volumes:
      - <%= $install_directory %>/volumes/functions:/home/deno/functions:Z
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  analytics:
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

<% if $enable_ssl { -%>
  # Nginx reverse proxy for SSL termination
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - <%= $install_directory %>/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - <%= $install_directory %>/certbot/conf:/etc/letsencrypt:ro
      - <%= $install_directory %>/certbot/www:/var/www/certbot:ro
    depends_on:
      - kong
      - studio
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Certbot for SSL certificate management
  certbot:
    image: certbot/certbot
    restart: "no"
    volumes:
      - <%= $install_directory %>/certbot/conf:/etc/letsencrypt:rw
      - <%= $install_directory %>/certbot/www:/var/www/certbot:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
<% } -%>

# Production network configuration
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/24

# Shared volumes for persistence
volumes:
  db_data:
    driver: local
  storage_data:
    driver: local 